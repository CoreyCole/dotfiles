set -g mode-keys vi

# Enable mouse support
set -g mouse on

bind h if -F '#{pane_at_left}' '' 'select-pane -L'
bind j if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind k if -F '#{pane_at_top}' '' 'select-pane -U'
bind l if -F '#{pane_at_right}' '' 'select-pane -R'

# Alt+Shift+hjkl for pane switching without prefix (no wrap)
bind-key -n M-H if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -n M-J if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -n M-K if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -n M-L if -F '#{pane_at_right}' '' 'select-pane -R'

# Unbind Ctrl+Alt+h/l (remove window switching)
unbind-key -n C-M-h
unbind-key -n C-M-l

# Ctrl+Alt+hjkl for splitting panes without prefix
bind-key -n C-M-h split-window -h -b -c "#{pane_current_path}"
bind-key -n C-M-j split-window -v -c "#{pane_current_path}"
bind-key -n C-M-k split-window -v -b -c "#{pane_current_path}"
bind-key -n C-M-l split-window -h -c "#{pane_current_path}"

# Alt+t to cycle through windows
bind-key -T root M-t next-window

# Alt+0/1/2/3/q/w/e/a/s/d for tmux windows 0-9 (create if doesn't exist)
bind-key -T root M-0 if "tmux select-window -t 0" "" "new-window -c \"#{pane_current_path}\" -t :0"
bind-key -T root M-1 if "tmux select-window -t 1" "" "new-window -c \"#{pane_current_path}\" -t :1"
bind-key -T root M-2 if "tmux select-window -t 2" "" "new-window -c \"#{pane_current_path}\" -t :2"
bind-key -T root M-3 if "tmux select-window -t 3" "" "new-window -c \"#{pane_current_path}\" -t :3"
bind-key -T root M-q if "tmux select-window -t 4" "" "new-window -c \"#{pane_current_path}\" -t :4"
bind-key -T root M-w if "tmux select-window -t 5" "" "new-window -c \"#{pane_current_path}\" -t :5"
bind-key -T root M-e if "tmux select-window -t 6" "" "new-window -c \"#{pane_current_path}\" -t :6"
bind-key -T root M-a if "tmux select-window -t 7" "" "new-window -c \"#{pane_current_path}\" -t :7"
bind-key -T root M-s if "tmux select-window -t 8" "" "new-window -c \"#{pane_current_path}\" -t :8"
bind-key -T root M-d if "tmux select-window -t 9" "" "new-window -c \"#{pane_current_path}\" -t :9"

# Ctrl+Shift+Alt+0/1/2/3/q/w/e/a/s/d to close tmux windows 0-9
bind-key -T root C-S-M-0 kill-window -t :0
bind-key -T root C-S-M-1 kill-window -t :1
bind-key -T root C-S-M-2 kill-window -t :2
bind-key -T root C-S-M-3 kill-window -t :3
bind-key -T root C-S-M-q kill-window -t :4
bind-key -T root C-S-M-w kill-window -t :5
bind-key -T root C-S-M-e kill-window -t :6
bind-key -T root C-S-M-a kill-window -t :7
bind-key -T root C-S-M-s kill-window -t :8
bind-key -T root C-S-M-d kill-window -t :9

# Setup 'v' to begin selection
bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
# bind -Tcopy-mode-vi y send -X copy-pipe "reattach-to-user-namespace xcopy"
set -g set-clipboard on

# Setup 'Enter' to use copy-pipe
unbind-key -Tcopy-mode-vi Enter
bind-key -Tcopy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace xcopy"

# Prevent mouse selection from auto-scrolling to bottom
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X stop-selection

bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

set -g status-style bg='#000000',fg=white
set -g message-style bg='#121212',fg=white

# Window list styling
set -g status-justify left
set -g status-position bottom
set -g window-status-separator ""

# Inactive windows - transparent with gray text
set -g window-status-style default
set -g window-status-format "#[fg=#808080,bg=#000000] #I #[default]"

# Active window - custom red background with bold white text
set -g window-status-current-style default
set -g window-status-current-format "#[fg=#ffffff,bg=#D16969,bold] #I #[default]"

# Pane border colors (lighter gray)
set -g pane-border-style fg='#090909'
set -g pane-active-border-style fg='#a0a0a0'

# support true color escape sequences
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*:Tc"  # Wildcard for all terminals
set -sa terminal-features ",*:RGB"

# cursor shape support for neovim
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

bind-key r source-file ~/.tmux.conf \; display "Reloaded from ~/.tmux.conf"

set -g default-shell "/bin/zsh"
set -g default-command "/bin/zsh"

